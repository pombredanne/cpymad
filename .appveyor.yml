platform:
  - x86
  - x64

environment:
  # For Python versions available on Appveyor, see
  # https://www.appveyor.com/docs/windows-images-software/#python
  matrix:
    - PYTHON: "2.7"
    - PYTHON: "3.3"
    - PYTHON: "3.4"
    - PYTHON: "3.5"
    - PYTHON: "3.6"
    - PYTHON: "3.7"

  global:
    MADX_DIR: C:\madx
    COVERALLS_REPO_TOKEN:
      secure: PomPESKrst4rtCnkZOCyfyBEb03xcHzg6O0bGrYw7lf3oGWcA/ufdhu+7+shaJRF


install:
  # Log environment for informational purposes:
  - set

  # Add python and installed scripts to PATH
  - if "%PLATFORM%" == "x86" set "PYTHON_HOME=C:\Python%PYTHON%"
  - if "%PLATFORM%" == "x64" set "PYTHON_HOME=C:\Python%PYTHON%-x64"
  - set "PATH=%PYTHON_HOME%;%PYTHON_HOME%\Scripts;%PATH%"

  # We need wheel installed to build wheels
  - python -m pip install setuptools wheel cython
  - python -m pip install coverage coveralls

  # build MAD-X
  - call "utils\appveyor\download_madx.bat" "%MADX_DIR%"

  # build and install cpymad
  - python setup.py build_ext -c mingw32 --static --madxdir=%MADX_DIR%
  - python setup.py bdist_wheel

  # wildcard expansion is a pain in CMD.exe and just a little less in
  # powershell:
  - ps: "pip install (ls dist\\* | % {\"$_\"})"

  # prevent python from accidentally importing the cpymad package from the
  # local check-out - we want the installed package, as only it contains the
  # libmadx.pyd binary:
  - rd /s /q cpymad

build: off

test_script:
  - coverage run --source=cpymad -a test/test_util.py -v
  - coverage run --source=cpymad -a test/test_madx.py -v

after_test:
 - coveralls

artifacts:
  - path: dist\*

cache:
  - '%LOCALAPPDATA%\pip\Cache'
